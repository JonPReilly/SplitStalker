"""
Django settings for StartingBlocks project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/


Changes:
removed
    {% load url from future %}
        from activation_email.html and activation_email.txt in 
        venv\lib\site-packages\registration\templates\registration\

"""

import os
import logging
import logging.config
import logging.handlers


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

from production_settings import *

"""
    
    Settings for productions. Contains sensative information that should not be public. Format:

    BASE_DIR = [Base Directory Path]

    SECRET_KEY = [Secret Key String] -- created by default for you in Django

    EMAIL_USE_TLS = True -- Not sensative, but I keep it with other email settings
    EMAIL_HOST = [Host Url] -- Url of server sending mail
    EMAIL_PORT = [Port Number] 
    EMAIL_HOST_USER = [Email Address] --email address I send mail from
    EMAIL_HOST_PASSWORD = [Email Password] --password for email

    # Database
    # https://docs.djangoproject.com/en/1.9/ref/settings/#databases

    Database information
    By default, looks like this:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

    
"""   
LOG_OBJECT = 'SplitStalkerLog'
MAX_LOGFILE_BYTES = 1000000 #1 MB
MAX_LOGFILE_BACKUPS = 3
LOG_FILE = 'serverlog.log'
LOG_PATH = os.path.join(BASE_DIR, 'logs', LOG_FILE)
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format' : "[%(asctime)s] %(levelname)s [%(filename)s:%(lineno)s]: %(message)s",
            'datefmt' : "%d/%b/%Y %H:%M:%S"
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOG_PATH,
            'maxBytes': MAX_LOGFILE_BYTES,
            'backupCount': MAX_LOGFILE_BACKUPS,
            'formatter': 'verbose'
        },
    },
    'loggers': {
        LOG_OBJECT: {
            'handlers':['file'],
            'propagate': True,
            'level':'DEBUG',
        }
    }
}



MAX_FOLLOWING_ALLOWED = 25 #The max number of athletes a user may follow
MAX_QUERY_RESULTS = 10 #The max number of athletes a search will return
MAX_CREATED_ALLOWED = 3 #The max number of custom athletes a user may create

ACCOUNT_ACTIVATION_DAYS = 7 # One-week activation window; you may, of course, use a different value.
REGISTRATION_AUTO_LOGIN = True # Automatically log the user in.
REGISTRATION_OPEN = True
SITE_ID = 1


LOGIN_REDIRECT_URL = "/"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [
	'reillj5.webfactional.com',
	'splitstalker.com',
]


from meetPingCron  import MeetPing
CRON_CLASSES = [

"StartingBlocks.meetPingCron.MeetPing",


]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    
    'signups',
    'errors',
    
    'registration',
    'django_cron',


]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'StartingBlocks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'StartingBlocks.wsgi.application'




# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = (
	os.path.join(BASE_DIR, 'static'),
)
STATIC_ROOT = '/home/reillj5/webapps/django_static'
